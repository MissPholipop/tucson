<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.piano.dao.MemberMapper" >
  <resultMap id="BaseResultMap" type="com.piano.entity.Member" >
    <id column="mem_id" property="memId" jdbcType="INTEGER" />
    <result column="u_type_id" property="uTypeId" jdbcType="INTEGER" />
    <result column="mem_name" property="memName" jdbcType="VARCHAR" />
    <result column="mem_nick" property="memNick" jdbcType="VARCHAR" />
    <result column="mem_pswd" property="memPswd" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.piano.entity.Member" extends="BaseResultMap" >
    <result column="mem_head" property="memHead" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    mem_id, u_type_id, mem_name, mem_nick, mem_pswd
  </sql>
  <sql id="Blob_Column_List" >
    mem_head
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from member
    where mem_id = #{memId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from member
    where mem_id = #{memId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.piano.entity.Member" >
    insert into member (mem_id, u_type_id, mem_name, 
      mem_nick, mem_pswd, mem_head
      )
    values (#{memId,jdbcType=INTEGER}, #{uTypeId,jdbcType=INTEGER}, #{memName,jdbcType=VARCHAR}, 
      #{memNick,jdbcType=VARCHAR}, #{memPswd,jdbcType=VARCHAR}, #{memHead,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.piano.entity.Member" >
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memId != null" >
        mem_id,
      </if>
      <if test="uTypeId != null" >
        u_type_id,
      </if>
      <if test="memName != null" >
        mem_name,
      </if>
      <if test="memNick != null" >
        mem_nick,
      </if>
      <if test="memPswd != null" >
        mem_pswd,
      </if>
      <if test="memHead != null" >
        mem_head,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memId != null" >
        #{memId,jdbcType=INTEGER},
      </if>
      <if test="uTypeId != null" >
        #{uTypeId,jdbcType=INTEGER},
      </if>
      <if test="memName != null" >
        #{memName,jdbcType=VARCHAR},
      </if>
      <if test="memNick != null" >
        #{memNick,jdbcType=VARCHAR},
      </if>
      <if test="memPswd != null" >
        #{memPswd,jdbcType=VARCHAR},
      </if>
      <if test="memHead != null" >
        #{memHead,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.piano.entity.Member" >
    update member
    <set >
      <if test="uTypeId != null" >
        u_type_id = #{uTypeId,jdbcType=INTEGER},
      </if>
      <if test="memName != null" >
        mem_name = #{memName,jdbcType=VARCHAR},
      </if>
      <if test="memNick != null" >
        mem_nick = #{memNick,jdbcType=VARCHAR},
      </if>
      <if test="memPswd != null" >
        mem_pswd = #{memPswd,jdbcType=VARCHAR},
      </if>
      <if test="memHead != null" >
        mem_head = #{memHead,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where mem_id = #{memId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.piano.entity.Member" >
    update member
    set u_type_id = #{uTypeId,jdbcType=INTEGER},
      mem_name = #{memName,jdbcType=VARCHAR},
      mem_nick = #{memNick,jdbcType=VARCHAR},
      mem_pswd = #{memPswd,jdbcType=VARCHAR},
      mem_head = #{memHead,jdbcType=LONGVARBINARY}
    where mem_id = #{memId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.piano.entity.Member" >
    update member
    set u_type_id = #{uTypeId,jdbcType=INTEGER},
      mem_name = #{memName,jdbcType=VARCHAR},
      mem_nick = #{memNick,jdbcType=VARCHAR},
      mem_pswd = #{memPswd,jdbcType=VARCHAR}
    where mem_id = #{memId,jdbcType=INTEGER}
  </update>
</mapper>